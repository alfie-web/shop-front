import React, { memo, useState } from 'react';
import { connect } from 'react-redux';
import classNames from 'classnames';
import { Link } from 'react-router-dom';
import { CirclePicker } from 'react-color';

import emptyImage from '../../assets/images/empty.png';
import { cartActions } from '../../store/actions';

import './Card.sass';

const Card = memo(({ className, image, name, cost, id, colors, addGoodToCart }) => {
	// console.log('CARD_RENDERS')
	const [colorsIsVisible, setColorsIsVisible] = useState(false);
	const [color, setColor] = useState(colors[0] || "");

	const handleChangeColor = (color) => {
		console.log(color.hex);
		setColor(color.hex)
	}

	return (
		<div className={classNames('Card', className)}>
			<div className="Card__top">
				<div className="Card__colors-wrap">
					{ colorsIsVisible && colors.length &&
						<div className="Card__colors">
							<CirclePicker 
								onChangeComplete={handleChangeColor}
								colors ={colors}
								color={color}
							/>
						</div> 
					}

					<button className={classNames('Card__colorsBtn Card__btn', {'active': colorsIsVisible})} onClick={() => setColorsIsVisible(!colorsIsVisible)}>
						<svg viewBox="0 0 27 27" xmlns="http://www.w3.org/2000/svg">
							<path d="M23.1037 4.84036C20.4098 1.719 16.8454 0 13.0669 0C9.87947 0 6.8672 1.22345 4.58493 3.44545C0.943925 6.99018 -0.256529 11.2075 1.29156 15.0162C2.55229 18.1182 5.43929 20.2847 8.3122 20.2847C8.38865 20.2847 8.46411 20.2833 8.5402 20.2799C8.96793 20.2623 9.38102 20.2266 9.78074 20.1921C10.2634 20.1501 10.7194 20.1107 11.1235 20.1107C12.0817 20.1107 12.9094 20.1107 12.9094 22.5513C12.9094 25.1705 14.5037 26.9998 16.7867 27C16.7868 27 16.7868 27 16.787 27C18.411 27 20.2098 26.0598 21.9884 24.2815C24.3413 21.9288 25.9065 18.6272 26.2824 15.2234C26.7057 11.3933 25.5767 7.70573 23.1037 4.84036ZM20.665 22.9582C19.2653 24.358 17.8877 25.1288 16.7868 25.1286C15.3061 25.1286 14.781 23.7401 14.781 22.5512C14.781 19.6096 13.6187 18.2394 11.1236 18.2394C10.6387 18.2394 10.1437 18.2823 9.61947 18.3275C9.24047 18.3601 8.84847 18.3941 8.46274 18.4101C8.41247 18.4123 8.36256 18.4132 8.31229 18.4132C6.21502 18.4132 3.99147 16.6882 3.02538 14.3115C1.77865 11.2445 2.82311 7.77273 5.89074 4.78618C7.82156 2.90655 10.37 1.87136 13.067 1.87136C16.2929 1.87136 19.3542 3.35982 21.687 6.06291C26.2897 11.3963 24.7818 18.8415 20.665 22.9582Z" />
							<path d="M17.514 15.0798C17.514 16.6446 18.7793 17.9177 20.3346 17.9177C21.8898 17.9177 23.155 16.6446 23.155 15.0798C23.155 13.5148 21.8898 12.2417 20.3346 12.2417C18.7793 12.2417 17.514 13.5148 17.514 15.0798ZM21.2835 15.0798C21.2835 15.6126 20.8579 16.0464 20.3346 16.0464C19.8113 16.0464 19.3857 15.6127 19.3857 15.0798C19.3857 14.5468 19.8114 14.1132 20.3346 14.1132C20.8579 14.1132 21.2835 14.5468 21.2835 15.0798Z" />
							<path d="M20.6285 8.49898C20.6285 6.93398 19.3633 5.66089 17.8081 5.66089C16.2529 5.66089 14.9876 6.93398 14.9876 8.49898C14.9876 10.0636 16.2529 11.337 17.8081 11.337C19.3633 11.337 20.6285 10.0636 20.6285 8.49898ZM16.8591 8.49898C16.8591 7.9658 17.2849 7.53244 17.8081 7.53244C18.3313 7.53244 18.757 7.9658 18.757 8.49898C18.757 9.03171 18.3312 9.46562 17.8081 9.46562C17.2848 9.46562 16.8591 9.0318 16.8591 8.49898Z" />
							<path d="M11.3512 3.60242C9.79604 3.60242 8.53076 4.87551 8.53076 6.44033C8.53076 8.00515 9.79604 9.27824 11.3512 9.27824C12.9064 9.27824 14.1717 8.00515 14.1717 6.44033C14.1717 4.87551 12.9064 3.60242 11.3512 3.60242ZM11.3512 7.40706C10.828 7.40706 10.4023 6.97333 10.4023 6.44033C10.4023 5.90733 10.828 5.47369 11.3512 5.47369C11.8745 5.47369 12.3001 5.90733 12.3001 6.44033C12.3 6.97333 11.8745 7.40706 11.3512 7.40706Z" />
							<path d="M6.43828 8.43726C4.8831 8.43726 3.61774 9.71035 3.61774 11.2752C3.61774 12.8401 4.8831 14.1133 6.43828 14.1133C7.99346 14.1133 9.25865 12.8401 9.25865 11.2752C9.25865 9.71035 7.99346 8.43726 6.43828 8.43726ZM6.43828 12.2417C5.91492 12.2417 5.48928 11.8081 5.48928 11.2751C5.48928 10.7423 5.91501 10.3087 6.43828 10.3087C6.96146 10.3087 7.38719 10.7423 7.38719 11.2751C7.38719 11.8082 6.96146 12.2417 6.43828 12.2417Z" />
						</svg>
					</button>
				</div>
			</div>

			<figure className="Card__image">
				<img src={image || emptyImage} alt="Good"/>
			</figure>

			<div className="Card__info">
				<Link to={`/goods/${id}`} ><h3 className="Card__name">{name}</h3></Link>

				<div className="Card__bottom">
					<div className="Card__cost">{cost} руб.</div>
					<button 
						className="Card__btn Header__permitted" 
						// Возможно не нужно хранить столько параметров, а делать запрос за товарами на сервак при переходе
						onClick={() => addGoodToCart({
							_id: id,
							color,
							cost,
							name,
							image
						})}
					>
						{/* <span>2</span> */}
						<svg viewBox="0 0 25 23" xmlns="http://www.w3.org/2000/svg">
							<path d="M23.9729 4.21507H4.42589L4.13534 0.978153C4.08781 0.448811 3.64418 0.0432129 3.11273 0.0432129H1.02671C0.459672 0.0432129 0 0.502885 0 1.06992C0 1.63696 0.459672 2.09663 1.02671 2.09663H2.17408C2.8011 9.08225 1.18057 -8.97299 3.35494 15.2526C3.43874 16.2008 3.95107 17.2297 4.83364 17.9289C3.24239 19.961 4.69631 22.9567 7.28474 22.9567C9.4331 22.9567 10.9484 20.8141 10.2116 18.7847H15.831C15.0952 20.8115 16.6072 22.9567 18.7579 22.9567C20.4742 22.9567 21.8706 21.5604 21.8706 19.844C21.8706 18.1276 20.4742 16.7313 18.7579 16.7313H7.29168C6.51177 16.7313 5.83214 16.2607 5.5388 15.5752L21.947 14.6109C22.3949 14.5846 22.7739 14.2703 22.8828 13.835L24.969 5.49078C25.1307 4.84376 24.6409 4.21507 23.9729 4.21507ZM7.28474 20.9033C6.70069 20.9033 6.22547 20.4281 6.22547 19.844C6.22547 19.2599 6.70069 18.7847 7.28474 18.7847C7.86884 18.7847 8.34406 19.2599 8.34406 19.844C8.34406 20.4281 7.86884 20.9033 7.28474 20.9033ZM18.7578 20.9033C18.1737 20.9033 17.6985 20.4281 17.6985 19.844C17.6985 19.2599 18.1737 18.7847 18.7578 18.7847C19.3419 18.7847 19.8171 19.2599 19.8171 19.844C19.8171 20.4281 19.3419 20.9033 18.7578 20.9033ZM21.0736 12.6053L5.26242 13.5344L4.61021 6.26844H22.6579L21.0736 12.6053Z" />
						</svg>
					</button>
				</div>
			</div>
		</div>
	)
})

export default connect(null, cartActions)(Card);